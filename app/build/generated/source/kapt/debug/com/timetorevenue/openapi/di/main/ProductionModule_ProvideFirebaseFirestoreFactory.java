// Generated by Dagger (https://dagger.dev).
package com.timetorevenue.openapi.di.main;

import com.google.firebase.firestore.FirebaseFirestore;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ProductionModule_ProvideFirebaseFirestoreFactory implements Factory<FirebaseFirestore> {
  @Override
  public FirebaseFirestore get() {
    return provideFirebaseFirestore();
  }

  public static ProductionModule_ProvideFirebaseFirestoreFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static FirebaseFirestore provideFirebaseFirestore() {
    return Preconditions.checkNotNull(ProductionModule.INSTANCE.provideFirebaseFirestore(), "Cannot return null from a non-@Nullable @Provides method");
  }

  private static final class InstanceHolder {
    private static final ProductionModule_ProvideFirebaseFirestoreFactory INSTANCE = new ProductionModule_ProvideFirebaseFirestoreFactory();
  }
}
