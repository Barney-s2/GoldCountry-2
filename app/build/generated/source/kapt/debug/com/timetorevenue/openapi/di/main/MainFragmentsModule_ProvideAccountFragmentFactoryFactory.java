// Generated by Dagger (https://dagger.dev).
package com.timetorevenue.openapi.di.main;

import androidx.fragment.app.FragmentFactory;
import androidx.lifecycle.ViewModelProvider;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainFragmentsModule_ProvideAccountFragmentFactoryFactory implements Factory<FragmentFactory> {
  private final Provider<ViewModelProvider.Factory> viewModelFactoryProvider;

  public MainFragmentsModule_ProvideAccountFragmentFactoryFactory(
      Provider<ViewModelProvider.Factory> viewModelFactoryProvider) {
    this.viewModelFactoryProvider = viewModelFactoryProvider;
  }

  @Override
  public FragmentFactory get() {
    return provideAccountFragmentFactory(viewModelFactoryProvider.get());
  }

  public static MainFragmentsModule_ProvideAccountFragmentFactoryFactory create(
      Provider<ViewModelProvider.Factory> viewModelFactoryProvider) {
    return new MainFragmentsModule_ProvideAccountFragmentFactoryFactory(viewModelFactoryProvider);
  }

  public static FragmentFactory provideAccountFragmentFactory(
      ViewModelProvider.Factory viewModelFactory) {
    return Preconditions.checkNotNull(MainFragmentsModule.INSTANCE.provideAccountFragmentFactory(viewModelFactory), "Cannot return null from a non-@Nullable @Provides method");
  }
}
