// Generated by Dagger (https://dagger.dev).
package com.timetorevenue.openapi.ui.main.blog.viewmodel;

import android.content.SharedPreferences;
import com.timetorevenue.openapi.repository.main.BlogRepositoryImpl;
import com.timetorevenue.openapi.session.SessionManager;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BlogViewModel_Factory implements Factory<BlogViewModel> {
  private final Provider<SessionManager> sessionManagerProvider;

  private final Provider<BlogRepositoryImpl> blogRepositoryProvider;

  private final Provider<SharedPreferences> sharedPreferencesProvider;

  private final Provider<SharedPreferences.Editor> editorProvider;

  public BlogViewModel_Factory(Provider<SessionManager> sessionManagerProvider,
      Provider<BlogRepositoryImpl> blogRepositoryProvider,
      Provider<SharedPreferences> sharedPreferencesProvider,
      Provider<SharedPreferences.Editor> editorProvider) {
    this.sessionManagerProvider = sessionManagerProvider;
    this.blogRepositoryProvider = blogRepositoryProvider;
    this.sharedPreferencesProvider = sharedPreferencesProvider;
    this.editorProvider = editorProvider;
  }

  @Override
  public BlogViewModel get() {
    return newInstance(sessionManagerProvider.get(), blogRepositoryProvider.get(), sharedPreferencesProvider.get(), editorProvider.get());
  }

  public static BlogViewModel_Factory create(Provider<SessionManager> sessionManagerProvider,
      Provider<BlogRepositoryImpl> blogRepositoryProvider,
      Provider<SharedPreferences> sharedPreferencesProvider,
      Provider<SharedPreferences.Editor> editorProvider) {
    return new BlogViewModel_Factory(sessionManagerProvider, blogRepositoryProvider, sharedPreferencesProvider, editorProvider);
  }

  public static BlogViewModel newInstance(SessionManager sessionManager,
      BlogRepositoryImpl blogRepository, SharedPreferences sharedPreferences,
      SharedPreferences.Editor editor) {
    return new BlogViewModel(sessionManager, blogRepository, sharedPreferences, editor);
  }
}
