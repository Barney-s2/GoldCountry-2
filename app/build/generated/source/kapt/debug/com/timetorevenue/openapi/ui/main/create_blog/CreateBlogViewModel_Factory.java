// Generated by Dagger (https://dagger.dev).
package com.timetorevenue.openapi.ui.main.create_blog;

import com.timetorevenue.openapi.repository.main.CreateBlogRepositoryImpl;
import com.timetorevenue.openapi.session.SessionManager;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CreateBlogViewModel_Factory implements Factory<CreateBlogViewModel> {
  private final Provider<CreateBlogRepositoryImpl> createBlogRepositoryProvider;

  private final Provider<SessionManager> sessionManagerProvider;

  public CreateBlogViewModel_Factory(
      Provider<CreateBlogRepositoryImpl> createBlogRepositoryProvider,
      Provider<SessionManager> sessionManagerProvider) {
    this.createBlogRepositoryProvider = createBlogRepositoryProvider;
    this.sessionManagerProvider = sessionManagerProvider;
  }

  @Override
  public CreateBlogViewModel get() {
    return newInstance(createBlogRepositoryProvider.get(), sessionManagerProvider.get());
  }

  public static CreateBlogViewModel_Factory create(
      Provider<CreateBlogRepositoryImpl> createBlogRepositoryProvider,
      Provider<SessionManager> sessionManagerProvider) {
    return new CreateBlogViewModel_Factory(createBlogRepositoryProvider, sessionManagerProvider);
  }

  public static CreateBlogViewModel newInstance(CreateBlogRepositoryImpl createBlogRepository,
      SessionManager sessionManager) {
    return new CreateBlogViewModel(createBlogRepository, sessionManager);
  }
}
