// Generated by Dagger (https://dagger.dev).
package com.timetorevenue.openapi.ui.main.account;

import com.timetorevenue.openapi.repository.main.AccountRepositoryImpl;
import com.timetorevenue.openapi.session.SessionManager;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AccountViewModel_Factory implements Factory<AccountViewModel> {
  private final Provider<SessionManager> sessionManagerProvider;

  private final Provider<AccountRepositoryImpl> accountRepositoryProvider;

  public AccountViewModel_Factory(Provider<SessionManager> sessionManagerProvider,
      Provider<AccountRepositoryImpl> accountRepositoryProvider) {
    this.sessionManagerProvider = sessionManagerProvider;
    this.accountRepositoryProvider = accountRepositoryProvider;
  }

  @Override
  public AccountViewModel get() {
    return newInstance(sessionManagerProvider.get(), accountRepositoryProvider.get());
  }

  public static AccountViewModel_Factory create(Provider<SessionManager> sessionManagerProvider,
      Provider<AccountRepositoryImpl> accountRepositoryProvider) {
    return new AccountViewModel_Factory(sessionManagerProvider, accountRepositoryProvider);
  }

  public static AccountViewModel newInstance(SessionManager sessionManager,
      AccountRepositoryImpl accountRepository) {
    return new AccountViewModel(sessionManager, accountRepository);
  }
}
