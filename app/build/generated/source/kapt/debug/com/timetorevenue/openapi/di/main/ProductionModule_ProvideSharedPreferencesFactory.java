// Generated by Dagger (https://dagger.dev).
package com.timetorevenue.openapi.di.main;

import android.content.SharedPreferences;
import com.timetorevenue.openapi.BaseApplication;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ProductionModule_ProvideSharedPreferencesFactory implements Factory<SharedPreferences> {
  private final Provider<BaseApplication> applicationProvider;

  public ProductionModule_ProvideSharedPreferencesFactory(
      Provider<BaseApplication> applicationProvider) {
    this.applicationProvider = applicationProvider;
  }

  @Override
  public SharedPreferences get() {
    return provideSharedPreferences(applicationProvider.get());
  }

  public static ProductionModule_ProvideSharedPreferencesFactory create(
      Provider<BaseApplication> applicationProvider) {
    return new ProductionModule_ProvideSharedPreferencesFactory(applicationProvider);
  }

  public static SharedPreferences provideSharedPreferences(BaseApplication application) {
    return Preconditions.checkNotNull(ProductionModule.INSTANCE.provideSharedPreferences(application), "Cannot return null from a non-@Nullable @Provides method");
  }
}
