// Generated by Dagger (https://dagger.dev).
package com.timetorevenue.openapi.di.main;

import com.timetorevenue.openapi.persistence.AppDatabase;
import com.timetorevenue.openapi.persistence.BlogPostDao;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainModule_ProvideBlogPostDaoFactory implements Factory<BlogPostDao> {
  private final Provider<AppDatabase> dbProvider;

  public MainModule_ProvideBlogPostDaoFactory(Provider<AppDatabase> dbProvider) {
    this.dbProvider = dbProvider;
  }

  @Override
  public BlogPostDao get() {
    return provideBlogPostDao(dbProvider.get());
  }

  public static MainModule_ProvideBlogPostDaoFactory create(Provider<AppDatabase> dbProvider) {
    return new MainModule_ProvideBlogPostDaoFactory(dbProvider);
  }

  public static BlogPostDao provideBlogPostDao(AppDatabase db) {
    return Preconditions.checkNotNull(MainModule.INSTANCE.provideBlogPostDao(db), "Cannot return null from a non-@Nullable @Provides method");
  }
}
