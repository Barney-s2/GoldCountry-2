// Generated by Dagger (https://dagger.dev).
package com.timetorevenue.openapi.ui;

import com.timetorevenue.openapi.session.SessionManager;
import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BaseActivity_MembersInjector implements MembersInjector<BaseActivity> {
  private final Provider<SessionManager> sessionManagerProvider;

  public BaseActivity_MembersInjector(Provider<SessionManager> sessionManagerProvider) {
    this.sessionManagerProvider = sessionManagerProvider;
  }

  public static MembersInjector<BaseActivity> create(
      Provider<SessionManager> sessionManagerProvider) {
    return new BaseActivity_MembersInjector(sessionManagerProvider);}

  @Override
  public void injectMembers(BaseActivity instance) {
    injectSessionManager(instance, sessionManagerProvider.get());
  }

  @InjectedFieldSignature("com.timetorevenue.openapi.ui.BaseActivity.sessionManager")
  public static void injectSessionManager(BaseActivity instance, SessionManager sessionManager) {
    instance.sessionManager = sessionManager;
  }
}
