// Generated by Dagger (https://dagger.dev).
package com.timetorevenue.openapi.di;

import com.timetorevenue.openapi.persistence.AccountPropertiesDao;
import com.timetorevenue.openapi.persistence.AppDatabase;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideAccountPropertiesDaoFactory implements Factory<AccountPropertiesDao> {
  private final Provider<AppDatabase> dbProvider;

  public AppModule_ProvideAccountPropertiesDaoFactory(Provider<AppDatabase> dbProvider) {
    this.dbProvider = dbProvider;
  }

  @Override
  public AccountPropertiesDao get() {
    return provideAccountPropertiesDao(dbProvider.get());
  }

  public static AppModule_ProvideAccountPropertiesDaoFactory create(
      Provider<AppDatabase> dbProvider) {
    return new AppModule_ProvideAccountPropertiesDaoFactory(dbProvider);
  }

  public static AccountPropertiesDao provideAccountPropertiesDao(AppDatabase db) {
    return Preconditions.checkNotNull(AppModule.INSTANCE.provideAccountPropertiesDao(db), "Cannot return null from a non-@Nullable @Provides method");
  }
}
