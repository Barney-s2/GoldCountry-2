// Generated by Dagger (https://dagger.dev).
package com.timetorevenue.openapi.repository.main;

import com.timetorevenue.openapi.api.main.OpenApiMainService;
import com.timetorevenue.openapi.persistence.BlogPostDao;
import com.timetorevenue.openapi.session.SessionManager;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CreateBlogRepositoryImpl_Factory implements Factory<CreateBlogRepositoryImpl> {
  private final Provider<OpenApiMainService> openApiMainServiceProvider;

  private final Provider<BlogPostDao> blogPostDaoProvider;

  private final Provider<SessionManager> sessionManagerProvider;

  public CreateBlogRepositoryImpl_Factory(Provider<OpenApiMainService> openApiMainServiceProvider,
      Provider<BlogPostDao> blogPostDaoProvider, Provider<SessionManager> sessionManagerProvider) {
    this.openApiMainServiceProvider = openApiMainServiceProvider;
    this.blogPostDaoProvider = blogPostDaoProvider;
    this.sessionManagerProvider = sessionManagerProvider;
  }

  @Override
  public CreateBlogRepositoryImpl get() {
    return newInstance(openApiMainServiceProvider.get(), blogPostDaoProvider.get(), sessionManagerProvider.get());
  }

  public static CreateBlogRepositoryImpl_Factory create(
      Provider<OpenApiMainService> openApiMainServiceProvider,
      Provider<BlogPostDao> blogPostDaoProvider, Provider<SessionManager> sessionManagerProvider) {
    return new CreateBlogRepositoryImpl_Factory(openApiMainServiceProvider, blogPostDaoProvider, sessionManagerProvider);
  }

  public static CreateBlogRepositoryImpl newInstance(OpenApiMainService openApiMainService,
      BlogPostDao blogPostDao, SessionManager sessionManager) {
    return new CreateBlogRepositoryImpl(openApiMainService, blogPostDao, sessionManager);
  }
}
