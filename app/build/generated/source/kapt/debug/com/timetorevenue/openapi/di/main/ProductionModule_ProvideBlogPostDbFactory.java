// Generated by Dagger (https://dagger.dev).
package com.timetorevenue.openapi.di.main;

import com.timetorevenue.openapi.BaseApplication;
import com.timetorevenue.openapi.persistence.AppDatabase;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ProductionModule_ProvideBlogPostDbFactory implements Factory<AppDatabase> {
  private final Provider<BaseApplication> appProvider;

  public ProductionModule_ProvideBlogPostDbFactory(Provider<BaseApplication> appProvider) {
    this.appProvider = appProvider;
  }

  @Override
  public AppDatabase get() {
    return provideBlogPostDb(appProvider.get());
  }

  public static ProductionModule_ProvideBlogPostDbFactory create(
      Provider<BaseApplication> appProvider) {
    return new ProductionModule_ProvideBlogPostDbFactory(appProvider);
  }

  public static AppDatabase provideBlogPostDb(BaseApplication app) {
    return Preconditions.checkNotNull(ProductionModule.INSTANCE.provideBlogPostDb(app), "Cannot return null from a non-@Nullable @Provides method");
  }
}
