// Generated by Dagger (https://dagger.dev).
package com.timetorevenue.openapi.di.auth;

import androidx.fragment.app.FragmentFactory;
import androidx.lifecycle.ViewModelProvider;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AuthFragmentsModule_ProvideFragmentFactoryFactory implements Factory<FragmentFactory> {
  private final Provider<ViewModelProvider.Factory> viewModelFactoryProvider;

  public AuthFragmentsModule_ProvideFragmentFactoryFactory(
      Provider<ViewModelProvider.Factory> viewModelFactoryProvider) {
    this.viewModelFactoryProvider = viewModelFactoryProvider;
  }

  @Override
  public FragmentFactory get() {
    return provideFragmentFactory(viewModelFactoryProvider.get());
  }

  public static AuthFragmentsModule_ProvideFragmentFactoryFactory create(
      Provider<ViewModelProvider.Factory> viewModelFactoryProvider) {
    return new AuthFragmentsModule_ProvideFragmentFactoryFactory(viewModelFactoryProvider);
  }

  public static FragmentFactory provideFragmentFactory(ViewModelProvider.Factory viewModelFactory) {
    return Preconditions.checkNotNull(AuthFragmentsModule.INSTANCE.provideFragmentFactory(viewModelFactory), "Cannot return null from a non-@Nullable @Provides method");
  }
}
